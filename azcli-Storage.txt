Creating Storage Account:
az storage account create --name accName --resource-group ResGrpName --sku standard_LRS --location useast

Creating a Container:
az storage container create --name mycontainer --public-access blob/container

Uploading a blob:
az storage blob upload --container mycontainer --name blobname --file filepath

Downloading a blob:
az storage blob download --resource-group resgrpName --name blobName --file savingPath

Deleting a Storage Account:
az storage account delete --name accname

Creating a Virtual Machine (VM):
az vm create --name vmname --resource-group resGrpName --admin-username username --admin-password password --image win2016datacentre/ubuntuLTS.

Attaching a Disk to VM:
az vm disk attach --resource-group resGrpName --vm-name name --size-gb 128 --sku Standard_LRS --new

Converting VM to Managed Disks:
az vm convert --resource-group resgrpname --name vmName

Creating a Azure File Share:
az storage share create --account-name accname --account-key acckey --name shareName.



Example

az storage account create --name mystra --resource-group user-gfncuokudqkj --sku standard_LRS --location eastus

az storage container create --name vmblob  --account-name mystra 

az storage blob upload --container myconta --name blobname --file LICENSE --account-name mystra


az storage account create --name mystrain --resource-group user-xcvosyhkhahl --sku standard_LRS --location eastus



az vm create \
    --resource-group user-gfncuokudqkj \
    --name nyVmName \
    --image Win2012R2Datacenter \
    --admin-username azureuser \
    --admin-password P@ssw0rd@123 \
    --size Standard_DS1_V2 \
    --location EastUS\
    --use-unmanaged-disk \
    --storage-sku Standard_LRS\
    --public-ip-address ""


az vm unmanaged-disk attach --name MyDataDisk --new --resource-group user-gfncuokudqkj --size-gb 512 --vm-name nyVmName

az vm deallocate --resource-group user-gfncuokudqkj --name nyVmName

az vm convert --resource-group user-gfncuokudqkj --name nyVmName

az vm start --resource-group user-gfncuokudqkj --name nyVmName


Azure Structured Table Storage:

To create a table:
az storage table create --name tablename --account-name Accname --access-key Acckey

To delete a table:
az storage table delete --name tablename --account-name Accname --access-key Acckey

To insert a storage entity into a table:
az storage entity insert --connection-string $connectionString --entity PartitionKey=AAA RowKey=BBB Content=ASDF2 --table-name tableName

To update an existing entity:
az storage entity merge --entity PartitionKey=AAA RowKey=BBB Content=ASDF2 --table-name tableName --account-key accKey --account-name accountName --connection-string $connectionString

To delete an entity:
az storage entity delete --partition-key KEY --row-key RKEY --table-name TName.

To read an entity:
az storage entity show --table-name MyTable --partition-key KEY --row-key RKEY

To query entities:
az storage entity query -t MyTable --filter "PartitionKey eq 'AAA'"

http://<storage account>.table.core.windows.net/<table>
 
 
 Example:
 
 az storage account create --name myaccin --resource-group user-qejqpefqkabc --sku standard_LRS --location eastus

az storage table create --name Frescotab --account-name myaccin 

az storage account show-connection-string -n myaccin  -g user-qejqpefqkabc --query connectionString -o tsv

az storage account show-connection-string -n myaccin  -g user-qejqpefqkabc --query connectionString -o tsv
DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=myaccin;AccountKey=g5tMI20sdMysPMD36NWdtVVG92tD0FhAMCEBRyCLzzcof/PtrTC8U+fBwlZMSPt1DxrXzRNrb3Ue2PirHTJn4w==


$ CONNECTION_STRING=`az storage account show-connection-string -n myaccin  -g user-qejqpefqkabc --query connectionString -o tsv`

$ echo $CONNECTION_STRING
DefaultEndpointsProtocol=https;EndpointSuffix=core.windows.net;AccountName=myaccin;AccountKey=g5tMI20sdMysPMD36NWdtVVG92tD0FhAMCEBRyCLzzcof/PtrTC8U+fBwlZMSPt1DxrXzRNrb3Ue2PirHTJn4w==

az storage entity insert --connection-string $CONNECTION_STRING --entity PartitionKey=AAA RowKey=BBB Content=ASDF2 --table-name Frescotab 

$ az storage entity show -t Frescotab --partition-key AAA --row-key BBB --account-name myaccin
{
  "Content": "ASDF2",
  "PartitionKey": "AAA",
  "RowKey": "BBB",
  "Timestamp": "2020-10-20T12:53:16.125321+00:00",
  "etag": "W/\"datetime'2020-10-20T12%3A53%3A16.1253216Z'\""
}


$ az storage entity insert --connection-string $CONNECTION_STRING --entity PartitionKey=ABC RowKey=BBC Content=ASDF2 --table-name Frescotab
"W/\"datetime'2020-10-20T13%3A01%3A07.030385Z'\""
$ az storage entity insert --connection-string $CONNECTION_STRING --entity PartitionKey=ABD RowKey=BBD Content=ASDF2 --table-name Frescotab
"W/\"datetime'2020-10-20T13%3A01%3A33.9525098Z'\""

az storage entity insert --connection-string $CONNECTION_STRING --entity PartitionKey=ABE RowKey=BBE Content=ASDF2 --table-name Frescotab

az storage entity insert --connection-string $CONNECTION_STRING --entity PartitionKey=ABF RowKey=BBF Content=ASDF2 --table-name Frescotab
 
update aZURE sTORAGE tABLESET:-
 
$az storage entity merge --connection-string $CONNECTION_STRING -t Frescotab -e PartitionKey=AAARowKey=BBB Content2=qwerty
"W/\"datetime'2020-10-20T13%3A10%3A40.5342556Z'\""

$ az storage entity show -t Frescotab --partition-key AAA --row-key BBB --account-name myaccin
{
  "Content": "ASDF2",
  "Content2": "qwerty",
  "PartitionKey": "AAA",
  "RowKey": "BBB",
  "Timestamp": "2020-10-20T13:10:40.534255+00:00",
  "etag": "W/\"datetime'2020-10-20T13%3A10%3A40.5342556Z'\"" 
 
 
 Delete Azure Storage TableSet
 
 $ az storage entity delete -t Frescotab --partition-key AAA --row-key BBB --account-name myaccin
{
  "deleted": null
}
 
 
 
Azure Structured Queue Storage: 
 
 
 To create a Queue:
az storage queue create --name Qname --account-name myAcc --account-key Mykey

To delete the existing Queue:
az storage queue delete --name Qname --account-name Myacc --account-key Acckey 

To put a message in a Queue:
az storage message put --content mymessage --queue-name qname 

To get a message in Queue:
az storage message get --queue-name Qname

To retrieve one or more messages from the front of the queue:
az storage message peek --queue-name Qname

Queue storage can be accessed as
 http://<account>.queue.core.windows.net/<QueueName>.

Example



az storage account create --name myaccind --resource-group user-sfanaqmdfajp --sku standard_LRS --location eastus



 az storage queue create --name testqueue --account-name myaccind

{
  "created": true
}


az storage message put --content frescoPLAY --queue-name testqueue -account-name myaccind

$ az storage message put -q testqueue --content "frescoPLAY" --account-name myaccind
{
  "content": "frescoPLAY",
  "dequeueCount": null,
  "expirationTime": "2020-10-27T13:37:31+00:00",
  "id": "cbda9955-f0ca-4ede-9354-7742ac236088",
  "insertionTime": "2020-10-20T13:37:31+00:00",
  "popReceipt": "AgAAAAMAAAAAAAAA3KYcKeam1gE=",
  "timeNextVisible": "2020-10-20T13:37:31+00:00"


}



$ az storage message peek -q testqueue --account-name myaccind
[
  {
    "content": "frescoPLAY",
    "dequeueCount": 0,
    "expirationTime": "2020-10-27T13:37:31+00:00",
    "id": "cbda9955-f0ca-4ede-9354-7742ac236088",
    "insertionTime": "2020-10-20T13:37:31+00:00",
    "popReceipt": null,
    "timeNextVisible": null
  }
]

$ az storage queue delete -n testqueue --account-name myaccind

az storage account delete --ids /subscriptions/23c7f465-e27b-418b-b8a7-21616582f9bb/resourceGroups/user-sfanaqmdfajp/providers/Microsoft.Storage/storageAccounts/myaccind"





Azure SQL Database CLI 2.0 Commands

To create a MySQL Database with given charset and collation rules
az mysql db create --resource-group testgroup --server-name testsvr --name testdb --charset {valid_charset} --collation {valid_collation}

To delete a DB:
az mysql db delete -g testgroup -s testsvr -n testdb

List all DB in a server:
az mysql db list -g testgroup -s testsvr

To show an existing Db:
az mysql db show -g testgroup -s testsvr -n testdb


CDN

.<endpointname>.azureedge.net.

To create a new CDN profile:
az cdn profile create --name testcdn --resource-group testgrp --sku premium_verizon

To create an endpoint with the origin as storage:
az cdn endpoint create --name testcdn --origin storage.blob.core.windows.net --profile-name profile --no-http

To delete an endpoint:
az cdn endpoint delete -g group -n endpoint --profile-name profile-name

To preload content for an endpoint:
az cdn endpoint load -g group -n endpoint --profile-name profile-name --content-paths '/scripts/app.js' '/styles/main.css'

content to be preloaded are to be mentioned in the above command.

To purge the preloaded content:
az cdn endpoint purge -g group -n endpoint --profile-name profile-name --content-paths '/scripts/app.js' '/styles/*'


Storage Analytics CLI 2.0 Commands

To update the metric settings for a storage account:
az storage metrics update --retention 7 --services blob/table/queue/files --account-name dnmae --account-key account_key 

To update the logging settings for a storage account:
 az storage logging update --log r/w/d --retention 7 --services blob/table/queue --account-key account_key --account-name dname 

Creating a Custom Role Using Azure CLI
az role definition create --role-definition ~/roles/VMoperator.json

Example Custom Rule
The VMOperator contains:

{
  "Name": "Virtual Machine Operator",
  "IsCustom": true,
  "Description": "Can monitor and restart virtual machines.",
  "Actions": [
    "Microsoft.Storage/*/read",
    "Microsoft.Network/*/read",
    "Microsoft.Compute/*/read",
    "Microsoft.Compute/virtualMachines/start/action",
    "Microsoft.Compute/virtualMachines/restart/action",
    "Microsoft.Authorization/*/read",
    "Microsoft.Resources/subscriptions/resourceGroups/read",
    "Microsoft.Insights/alertRules/*",
    "Microsoft.Support/*"
  ],
  "NotActions": [

  ],
  "AssignableScopes": [
    "/subscriptions/11111111-1111-1111-1111-111111111111",
    "/subscriptions/33333333-3333-3333-3333-333333333333"
  ]
}


az storage account create --name mystra --resource-group user-kkvjjpjojsbl --sku standard_LRS --location eastus
az storage metrics update --account-name mystra  --api true --minute true --retention 10 --services b

--services
metrics info: (b)lob (q)ueue (t)able. Can be combined.



az storage logging show --account-name mystra --services b



 az storage logging update --account-name mystra --log r --retention 10 --services b
$ az storage logging update --account-name mystra --log w --retention 10 --services b
$ az storage logging update --account-name mystra --log d --retention 10 --services b
$
$ az storage logging show --account-name mystra --services b
{
  "blob": {
    "delete": true,
    "read": false,
    "retentionPolicy": {
      "days": 10,
      "enabled": true
    },
    "version": "1.0",
    "write": false
  }
}
